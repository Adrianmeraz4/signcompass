<head>
  <style>
    .button {
      display: inline-block;
      padding: 15px 25px;
      font-size: 24px;
      cursor: pointer;
      text-align: center;
      text-decoration: none;
      outline: none;
      color: #fff;
      background-color: #4CAF50;
      border: none;
      border-radius: 15px;
      box-shadow: 0 9px #999;
    }

    .button:hover {
      background-color: #3e8e41
    }

    .button:active {
      background-color: #3e8e41;
      box-shadow: 0 5px #666;
      transform: translateY(4px);
    }

    .button2 {
      display: inline-block;
      padding: 15px 25px;
      font-size: 24px;
      cursor: pointer;
      text-align: center;
      text-decoration: none;
      outline: none;
      color: #fff;
      background-color: #3399ff;
      border: none;
      border-radius: 15px;
      box-shadow: 0 9px #999;
    }

    .button2:hover {
      background-color: #0073e6
    }

    .button2:active {
      background-color: #0073e6;
      box-shadow: 0 5px #666;
      transform: translateY(4px);
    }
  </style>
</head>
<div style="text-align: center;">
  <div id="butHolder">
    <button id="but" autoplay class="button" style="display: none">
      Open WebCam
    </button>
  </div>

  <div>
    <video id="vid" width="400" height="400"></video>
  </div>

</div>
<br>

<canvas id="canvas" width="100" height="100"></canvas>
<script src="https://cdn.rawgit.com/BrainJS/brain.js/45ce6ffc/browser.js"></script>
<script>
  // style="display: none"
  const canvas = document.querySelector("canvas");
  const ctx = canvas.getContext("2d");

  let but = document.getElementById("but");

  var Json;
  var net

  var doMath = false;
  fetch('model1.json')
    .then((response) => response.json())
    .then((json) => {
      Json = json;
      but.style = "display: block; text-align: center;";
      //console.log(Json);

      net = new brain.NeuralNetwork({
        activation: 'sigmoid',
        //hiddenLayers: [200, 100, 50],
        hiddenLayers: [20, 10, 5],
        learningRate: 0.1
      });
      net.fromJSON(Json);
    });

  document.addEventListener("DOMContentLoaded", () => {

    let video = document.getElementById("vid");
    let mediaDevices = navigator.mediaDevices;
    vid.muted = true;
    but.addEventListener("click", () => {

      but.remove();
      const butHolder = document.getElementById("butHolder");
      const newBut = document.createElement("button");
      newBut.classList.add("button2");
      newBut.innerHTML = "Check Answer"
      newBut.onclick = newButton;
      butHolder.appendChild(newBut);

      // Accessing the user camera and video.
      mediaDevices
        .getUserMedia({
          video: true,
          audio: true,
        })
        .then((stream) => {

          // Changing the source of video to current stream.
          video.srcObject = stream;
          video.addEventListener("loadedmetadata", () => {
            video.play();
            function step() {
              if (doMath) {
                doMath = false;
                ctx.drawImage(video, 0, 0, canvas.width, canvas.height);
                var imgd = ctx.getImageData(0, 0, canvas.width, canvas.height);
                var pix = imgd.data;
                // 0-4 is RGBA - assume 5 is next pixel
                //alert(pix[0]);
                // Loop over each pixel and invert the color.
                var currentGrays = [];
                for (var i = 0, n = pix.length; i < n; i += 4) {
                  let avg = Math.round((pix[i] + pix[i + 1] + pix[i + 2]) / 3.0);
                  //alert(avg);
                  currentGrays.push(avg);
                }
                var guess = net.run(currentGrays);
                console.log(guess);
                //ctx.font = "30px Arial";
                //ctx.fillText("Hello World", 10, 50);
              }
              // Draw the ImageData at the given (x,y) coordinates.
              //ctx.putImageData(currentGrays, 0, 0);
              requestAnimationFrame(step);

            }
            requestAnimationFrame(step);
          });
        })
        .catch(alert);
    });
  });

  function newButton() {
    console.log("hi");
    doMath = true;
  }

</script>